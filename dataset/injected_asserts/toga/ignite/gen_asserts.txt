assertTrue ( iterators . size ( ) < GENERATED )
assertNull ( idxScan )
assertNull ( idxScan )
assertNull ( idxScan )
assertTrue ( F . first ( nodes ) . connectable ( ) )
assertTrue ( res )
assertTrue ( F . isEmpty ( reason . getUpdateCounts ( ) ) )
assertEquals ( 0 , stmt . executeUpdate ( SQL ) )
assertEquals ( 1 , prepStmt . executeUpdate ( ) )
assertTrue ( stmt . execute ( SQL ) )
assertTrue ( prepStmt . execute ( ) )
assertTrue ( recreatedAffinityCache . version ( ) . compareTo ( affinityCache . version ( ) ) > 0 )
assertTrue ( recreatedAffinityCache . version ( ) . compareTo ( affinityCache . version ( ) ) > 0 )
assertTrue ( log . toString ( ) . contains ( "ignoring BEGIN command" ) )
assertTrue ( log . toString ( ) . contains ( "ignoring BEGIN command" ) )
assertTrue ( log . toString ( ) . contains ( "ignoring BEGIN command" ) )
assertTrue ( log . toString ( ) . contains ( "ignoring BEGIN command" ) )
assertTrue ( log . toString ( ) . contains ( "ignoring BEGIN command" ) )
assertEquals ( 0 , client . cacheNames ( ) . size ( ) )
assertEquals ( 0 , evtsTriggered . get ( ) )
assertTrue ( GridTestUtils . waitForCondition ( ( ) -> thread . getName ( ) . equals ( failureHndThreadName ) , fdTimeout * 2 ) )
assertEquals ( 1 , invalidPrj . nodes ( ) . size ( ) )
assertTrue ( ignite . cluster ( ) . nodes ( ) . contains ( ignite . cluster ( ) . forRandom ( ) . node ( ) ) )
assertTrue ( lsnr . check ( ) )
assertTrue ( true )
assertEquals ( 0 , grid ( 0 ) . cluster ( ) . forServers ( ) . nodes ( ) . size ( ) )
assertTrue ( ignite . context ( ) . event ( ) . isRecordable ( EVT_NODE_VALIDATION_FAILED ) )
assertTrue ( strLog . toString ( ) . contains ( "LongJVMPauseDetector was successfully started" ) )
assertTrue ( deserialized . foo instanceof GridBinaryTestClasses . TestObjectArrayList )
assertTrue ( Arrays . equals ( dateArr , builder ( "C" ) . setField ( "da" , dateArr ) . build ( ) . < Date [ ] > field ( "da" ) ) )
assertTrue ( Arrays . equals ( tsArr , builder ( "C" ) . setField ( "ta" , tsArr ) . build ( ) . < Timestamp [ ] > field ( "ta" ) ) )
assertTrue ( client . cacheNames ( ) . contains ( TMP_CACHE_NAME ) )
assertTrue ( err . getMessage ( ) . contains ( "Cache does not exist" ) )
assertTrue ( errMessage . contains ( "cause=Foo" ) )
assertEquals ( 4 , rc . getChannelHolders ( ) . size ( ) )
assertTrue ( log . logs ( ) . stream ( ) . anyMatch ( msg -> msg . contains ( "Coordinator changed" ) && msg . contains ( "isClient=true" ) ) )
assertFalse ( baselineEvtLatch . await ( 2 , TimeUnit . SECONDS ) )
assertFalse ( val )
assertTrue ( grid0 . cache ( DEFAULT_CACHE_NAME ) . localSize ( ) == 0 )
assertTrue ( log . contains ( "Default lock timeout" ) )
assertTrue ( lsnr . check ( getTestTimeout ( ) ) )
assertTrue ( logTxDumpLsnr . check ( ) )
assertTrue ( logTxDumpLsnr . check ( ) )
assertTrue ( grid0 . cache ( cacheName ( ) ) . localSize ( ) == 0 )
assertEquals ( 1 , ex . context ( ) . discovery ( ) . aliveServerNodes ( ) . size ( ) )
assertTrue ( F . isEmpty ( metaDir . list ( ) ) )
assertTrue ( latch2 . await ( 10000 ) )
assertTrue ( stringLogger . toString ( ) . contains ( NullPointerException . class . getName ( ) ) )
assertEquals ( 0 , cache . size ( ) )
assertTrue ( nodeFailure . get ( ) )
assertTrue ( lsnr . check ( ) )
assertTrue ( lsnr . check ( ) )
assertTrue ( lsnr . check ( ) )
assertEquals ( 0 , cache . get ( 1 ) )
assertTrue ( logLsnr . check ( ) )
assertTrue ( gridStartFut . get ( ) )
assertTrue ( log0 . toString ( ) . contains ( WARN_MSG_PREFIX ) )
assertTrue ( grid ( 0 ) . cluster ( ) . state ( ) . active ( ) )
assertTrue ( handleFired . get ( ) )
assertTrue ( lsnr . check ( ) )
assertTrue ( opened . isEmpty ( ) )
assertTrue ( recordedAfterSleep )
assertFalse ( backoff . reset ( ) )
assertFalse ( backoff . reset ( ) )
assertTrue ( committedVMSize - initVMsize <= ALLOWED_DELTA )
assertFalse ( G . allGrids ( ) . isEmpty ( ) )
assertFalse ( PageMemoryTrackerPluginProvider . tracker ( ignite ) . checkPages ( true ) )
assertTrue ( PageMemoryTrackerPluginProvider . tracker ( ignite0 ) . checkPages ( true ) )
assertTrue ( future . get ( 20 ) instanceof IgniteInterruptedCheckedException )
assertTrue ( future . get ( 20 ) instanceof IgniteInterruptedCheckedException )
assertTrue ( future . get ( 20 ) instanceof IgniteInterruptedCheckedException )
assertTrue ( future . get ( 20 ) instanceof IgniteInterruptedCheckedException )
assertEquals ( 0 , node2 . cluster ( ) . nodes ( ) . size ( ) )
assertEquals ( 1 , ignite0 . cluster ( ) . nodes ( ) . size ( ) )
assertFalse ( s )
assertTrue ( s )
assertTrue ( failed )
assertTrue ( failed )
assertFalse ( failed )
assertTrue ( thrown )
assertEquals ( 1 , metastorage . cache . size ( ) )
assertEquals ( 1 , metastorage . cache . size ( ) )
assertTrue ( str . matches ( translated ) )
assertFalse ( commands . contains ( GridRestCommand . LOG ) )
assertTrue ( latch . await ( getTestTimeout ( ) , TimeUnit . MILLISECONDS ) )
assertTrue ( containsAddr )
assertTrue ( ignite . cache ( EVICTION_TEST_CACHE ) . getAll ( insertedKeys ) . size ( ) < entriesCnt )
assertEquals ( 4 , svc . get ( ) )
assertTrue ( getErr ( ) . contains ( "Cache is not configured:" ) )
assertTrue ( res . get ( ) )
assertTrue ( log . toString ( ) . contains ( msg ) )
assertTrue ( log . toString ( ) . contains ( msg ) )
assertEquals ( 0 , directPositionMap . size ( ) )
assertTrue ( sumQueried == sumPopulated * SCALE_FACTOR )
assertFalse ( listener . check ( ) )
assertTrue ( ClientExceptionsUtils . isClientNodeTopologyException ( clusterTopologyCheckedException ( ) , node ) )
assertFalse ( ClientExceptionsUtils . isClientNodeTopologyException ( clusterTopologyCheckedException ( ) , node ) )
assertTrue ( res . get ( n ) )
assertTrue ( logLsnr0 . check ( ) )
assertTrue ( logLsnr0 . check ( ) )
assertTrue ( e . getCause ( ) . getMessage ( ) . contains ( "Failed to send message" ) )
assertTrue ( e . getCause ( ) . getMessage ( ) . contains ( "Failed to send message" ) )
assertFalse ( res )
assertEquals ( 4 , spi . getSockets ( ) . size ( ) )
assertEquals ( 0 , grid . cluster ( ) . topologyVersion ( ) )
assertTrue ( e . getMessage ( ) . contains ( "IP finder has not been properly initialized" ) )
assertTrue ( e . getMessage ( ) . contains ( "Task topology does not have alive nodes" ) )
assertEquals ( 1 , proxy . getProcess ( ) . getProcess ( ) . exitValue ( ) )
assertEquals ( 1 , cntr . get ( ) )
assertTrue ( emptyLineLsnr . check ( ) )
assertEquals ( 0 , cp2 . size ( ) )
assertEquals ( 100 , entries . size ( ) )
assertTrue ( qry . getAll ( ) . isEmpty ( ) )
assertTrue ( failed )
assertTrue ( e instanceof CacheException )
assertEquals ( 10 , sql ( "select * from test where id1 = 0 and id2 > 0" ) . getAll ( ) . size ( ) )
assertFalse ( tasks ( n ) . isEmpty ( ) )
assertFalse ( lsnr . check ( ) )
assertTrue ( lsnr . check ( ) )
assertEquals ( 1 , res . size ( ) )
assertEquals ( 0 , G . allGrids ( ) . size ( ) )
assertEquals ( 2 , conns . size ( ) )
assertTrue ( taskLifecycleLsnr . check ( ) )
assertTrue ( selectData . get ( 0 ) . stream ( ) . allMatch ( d -> Objects . equals ( sqlObj , d ) ) )
assertEquals ( 1 , results . size ( ) )
assertTrue ( grid ( ) . cluster ( ) . state ( ) . active ( ) )
assertTrue ( logLsnr . check ( ) )
assertTrue ( rs1 . isEmpty ( ) )
assertTrue ( GridTestUtils . waitForCondition ( ( ) -> statObs . get ( SMALL_KEY ) . size ( ) > oldSize , TIMEOUT ) )
assertTrue ( cnt > 0 )
assertEquals ( 1 , cache . get ( 1 ) )
assertTrue ( e . getMessage ( ) . contains ( "Directory not found or empty" ) )
assertTrue ( e . getMessage ( ) . contains ( "Directory not found or empty" ) )
assertTrue ( e . getMessage ( ) . contains ( "Directory should contain data sub-directory" ) )
assertTrue ( e . getMessage ( ) . contains ( "Directory should contain metadata sub-directory" ) )
assertTrue ( e . getMessage ( ) . contains ( "Directory should contain parquet file" ) )
assertTrue ( e . getMessage ( ) . contains ( "Directory should contain only one parquet file" ) )
assertTrue ( e . getMessage ( ) . contains ( "Directory should contain json file with model metadata" ) )
assertTrue ( e . getMessage ( ) . contains ( "Directory should contain treeMetadata sub-directory" ) )
assertTrue ( e . getMessage ( ) . contains ( "Directory should contain parquet file" ) )
assertTrue ( e . getMessage ( ) . contains ( "Directory should contain only one parquet file" ) )
assertTrue ( e . getMessage ( ) . contains ( "The metadata file contains incorrect model metadata." ) )
assertTrue ( mdl . centers ( ) [ zeroCentre ] . get ( 0 ) == 0 )
assertTrue ( Arrays . equals ( exp . getStorage ( ) . data ( ) , c . getStorage ( ) . data ( ) ) )
assertTrue ( testVector . size ( ) == MathTestConstants . STORAGE_SIZE )
assertEquals ( 10 , cache . size ( ) )
assertTrue ( validValues . contains ( vector . get ( 0 ) ) )
assertTrue ( gotSpans . isEmpty ( ) )
assertEquals ( 0 , gotSpans . size ( ) )
assertEquals ( 0 , gotSpans . size ( ) )
assertTrue ( gotSpans . isEmpty ( ) )
assertEquals ( 100 , client . getChildren ( "/apacheIgnite" ) . size ( ) )
assertEquals ( 2 , client . getChildren ( "/apacheIgnite" ) . size ( ) )
assertTrue ( client . getChildren ( "/apacheIgnite" ) . isEmpty ( ) )
assertFalse ( res . get ( ) )
assertTrue ( res . get ( j ) )
assertTrue ( l . await ( 10 , TimeUnit . SECONDS ) )
assertEquals ( 2 , ignite . cluster ( ) . topologyVersion ( ) )
