assertTrue ( factory instanceof TestBusFactory )
assertFalse ( MessageUtils . getTargetMethod ( message ) . isPresent ( ) )
assertTrue ( bos . toString ( ) . contains ( "ItemLookup" ) )
assertFalse ( closed . get ( ) )
assertTrue ( closed . get ( ) )
assertTrue ( o instanceof Foo )
assertTrue ( ul == ulongValue )
assertTrue ( mode == org . omg . CORBA . ARG_IN . value )
assertNull ( nsc )
assertTrue ( sb instanceof SimpleBean )
assertTrue ( h instanceof MyHello )
assertTrue ( tm . getTypeCreator ( ) instanceof XMLTypeCreator )
assertTrue ( info . isNillable ( new QName ( info . getDefaultNamespace ( ) , "bogusProperty" ) ) )
assertTrue ( type instanceof EnumType )
assertEquals ( 0 , type . getTypeInfo ( ) . getElements ( ) . size ( ) )
assertTrue ( cc . toString ( ) . contains ( "private=\"a,b\"" ) )
assertNull ( values )
assertNull ( builder )
assertTrue ( uriTemplate . match ( "/customers;123456/123/orders;456/3" , values ) )
assertFalse ( p . isWriteable ( Byte . class , null , null , MediaType . valueOf ( "text/custom" ) ) )
assertFalse ( p . isWriteable ( Character . class , null , null , MediaType . valueOf ( "text/custom" ) ) )
assertTrue ( em instanceof WebApplicationExceptionMapper )
assertTrue ( em instanceof WebApplicationExceptionMapper )
assertTrue ( mbr instanceof StringTextProvider )
assertTrue ( mbr instanceof PrimitiveTextProvider )
assertTrue ( mbr instanceof CustomBooleanReader2 )
assertTrue ( mbr instanceof StringTextProvider )
assertTrue ( Document . class . isAssignableFrom ( verifyRead ( p , Document . class ) . getClass ( ) ) )
assertTrue ( e . getMessage ( ) . contains ( "WebMethod" ) )
assertTrue ( disp . getBinding ( ) instanceof HTTPBinding )
assertTrue ( server . getDestination ( ) instanceof CustomDestination )
assertTrue ( bean . create ( ) instanceof BookStore )
assertTrue ( bean . create ( ) instanceof BookStore )
assertTrue ( bean . create ( ) instanceof Book )
assertTrue ( e . getMessage ( ) . contains ( "client is closed" ) )
assertTrue ( bos . toString ( ) . contains ( "\"name\":\"http://cxf\"" ) )
assertTrue ( SearchConditionBuilder . instance ( ) instanceof FiqlSearchConditionBuilder )
assertTrue ( t instanceof BearerAccessToken )
assertNull ( c3 )
assertTrue ( FilteringUtil . doesConformToFilter ( doc . getDocumentElement ( ) , filter ) )
assertTrue ( ctx . getUserPrincipal ( ) instanceof SAMLTokenPrincipal )
assertTrue ( result )
assertTrue ( wc . post ( "s" , Boolean . class ) )
assertTrue ( wc . post ( "s" , Boolean . class ) )
assertTrue ( cause instanceof ProcessingException )
assertTrue ( cause . getMessage ( ) . contains ( "Different HTTP Scheme or Host Redirect detected on" ) )
assertTrue ( IOUtils . toString ( is ) . contains ( "CXF in Action - 2" ) )
assertTrue ( e . getMessage ( ) . indexOf ( "HandleMessage throws exception" ) >= 0 )
assertTrue ( e . getMessage ( ) . equals ( "TestSOAPFaultException" ) )
assertFalse ( created . value )
assertTrue ( sfe . getMessage ( ) . contains ( "Marshalling Error" ) )
assertTrue ( cause instanceof ProcessingException )
assertTrue ( e . getMessage ( ) . contains ( "Unrecognized BindingVersion" ) )
assertTrue ( e . getMessage ( ) . contains ( "Unexpected wrapper" ) )
assertTrue ( ( end - start ) < 50000 )
assertTrue ( ( end - start ) < 50000 )
assertTrue ( e . getFault ( ) . getFaultCode ( ) . contains ( "OnlyNonAnonymousAddressSupported" ) )
assertTrue ( e . getFault ( ) . getFaultCode ( ) . contains ( "OnlyAnonymousAddressSupported" ) )
assertTrue ( new File ( targetDir . getRoot ( ) , "/com/iona/test/A.java" ) . canWrite ( ) )
assertTrue ( e . getMessage ( ) . indexOf ( "can't resolve type for const myConst" ) >= 0 )
assertTrue ( gen . getJAXBCustFile ( new File ( "." ) ) . toString ( ) . endsWith ( "demo.xjb" ) )
assertTrue ( this . getStdOut ( ) . contains ( "Valid WSDL" ) )
assertTrue ( getStdErr ( ) . indexOf ( "The ftp URI scheme is not allowed" ) != - 1 )
assertTrue ( e . getMessage ( ) . contains ( expected ) )
assertTrue ( wrex . getMessage ( ) . contains ( "Could not find portType for binding" ) )
assertTrue ( boolA || boolB )
