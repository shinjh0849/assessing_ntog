assertThrows ( IllegalStateException . class , ( ) -> new C2HttpClient ( c2ClientConfig , serializer ) )
assertNotNull ( heartbeat . getAgentInfo ( ) )
assertEquals ( MANIFEST_HASH , heartbeat . getAgentInfo ( ) . getManifestHash ( ) )
assertEquals ( OperationState . ERROR , response . getState ( ) )
assertEquals ( properties , result )
assertEquals ( getExpected ( OperationState . FULLY_APPLIED ) , result )
assertEquals ( getExpected ( OperationState . NO_OPERATION ) , result )
assertEquals ( getExpected ( OperationState . NOT_APPLIED ) , result )
assertThrows ( RuntimeException . class , ( ) -> updatePropertiesOperationHandler . handle ( c2Operation ) )
assertEquals ( responseHeaders . size ( ) , expectedSize )
assertEquals ( "" , outputStream . toString ( ) )
assertEquals ( trim ( unknown ) , "<expected value>" )
assertEquals ( "" , outputStream . toString ( ) . trim ( ) )
assertEquals ( "expectedValue" , trim ( "actualValue" ) )
assertEquals ( trim ( "UPDATE_CONFIGURATION" ) , c2Operation . getIdentifier ( ) )
assertEquals ( "id" , c2Operation . getIdentifier ( ) )
assertEquals ( null , getCurrentPort ( ) )
assertNull ( properties . getProperty ( descriptor ) )
assertEquals ( HttpURLConnection . HTTP_OK , urlConnection . getResponseCode ( ) )
assertEquals ( HttpURLConnection . HTTP_OK , urlConnection . getResponseCode ( ) )
assertEquals ( 1 , idToNameList . size ( ) )
assertEquals ( 0 , validationIssues . size ( ) )
assertEquals ( true , isValid ( ) )
assertEquals ( "Unsupported version: 9999999" , e . getMessage ( ) )
assertEquals ( 0 , validationIssues . size ( ) )
assertThat ( sourceRelationshipNames . size ( ) , is ( equalTo ( 0 ) ) )
assertEquals ( true , result )
assertEquals ( true , result )
assertThat ( actual , is ( equalTo ( expected ) ) )
assertThat ( actual , is ( equalTo ( expected ) ) )
assertThat ( actual , is ( equalTo ( expected ) ) )
assertEquals ( expected , status )
assertEquals ( expected , actual )
assertEquals ( expected , actual )
assertEquals ( expected , actual )
assertEquals ( expected , actual )
assertThat ( actual , is ( equalTo ( expected ) ) )
assertThat ( actual , is ( equalTo ( expected ) ) )
assertThat ( actual , is ( equalTo ( expected ) ) )
assertEquals ( expected , actual )
assertThat ( actual , is ( equalTo ( expected ) ) )
assertThat ( actual , is ( equalTo ( expected ) ) )
assertThat ( actual , is ( equalTo ( expected ) ) )
assertThat ( actual , is ( equalTo ( expected ) ) )
assertThat ( actual , is ( equalTo ( expected ) ) )
assertThat ( actual , is ( equalTo ( expected ) ) )
assertThat ( actual , is ( equalTo ( expected ) ) )
assertEquals ( expected , actual )
assertEquals ( expected , actual )
assertEquals ( expected , actual )
assertEquals ( expected , actual )
assertEquals ( expected , actual )
assertEquals ( true , configSchema . isValid ( ) )
assertEquals ( ConnectableType . FUNNEL . name ( ) , dto . getSource ( ) . getType ( ) )
assertNotNull ( exception )
assertEquals ( "Expected message" , "REFERENCE_CLASS" , message )
assertEquals ( "value" , evaluated )
assertEquals ( "x" , "x" , result )
assertThat ( attrs . get ( "yy" ) ) . isEqualTo ( "world" )
assertEquals ( trim ( property ) , trim ( outputProperty ) )
assertEquals ( value , resultValue )
assertThat ( size ( ) , is ( equalTo ( expectedSize ) ) )
assertEquals ( 0 , size ( ) )
assertEquals ( Optional . empty ( ) , paramContext . getParameter ( "foo" ) )
assertEquals ( 8000 , clusterProtocolAddress . getPort ( ) )
assertEquals ( PROPERTY , decrypted )
assertArrayEquals ( decoded , Hex . decodeHex ( encrypted ) )
assertEquals ( encryptResponse , kmsClient . encrypt ( any ( EncryptRequest . class ) ) )
assertEquals ( secretName , createSecretResponse . getName ( ) )
assertEquals ( encryptResult , cryptographyClient . encrypt ( eq ( ALGORITHM ) , any ( byte [ ] . class ) ) )
assertEquals ( protectedProperty , "<expected value>" )
assertEquals ( "expectedIdentifierKey" , identifierKey )
assertEquals ( "expectedValue" , getContextKey ( ) )
assertNotNull ( exception )
assertEquals ( null , identifierKey )
assertEquals ( null , identifierKey )
assertEquals ( "Doe" , record . getValue ( "lastName" ) )
assertEquals ( "id" , 48 , record . getField ( "id" ) )
assertEquals ( recordSchema , resultSchema )
assertEquals ( recordSchema , resultSchema )
assertEquals ( DataType . class , getDataType ( ) . getClass ( ) )
assertEquals ( null , timestamp )
assertEquals ( EMPTY , timestamp )
assertEquals ( set . getDataType ( ) , RecordFieldType . DOUBLE . getDataType ( ) )
assertEquals ( "SUCCESS" , resultHolder . get ( ) )
assertEquals ( keyIds . size ( ) , expectedSize )
assertEquals ( Collections . singletonList ( KEY_ID ) , keyIds )
assertEquals ( secretKey , readSecretKey )
assertEquals ( sslContext , builder . build ( ) )
assertEquals ( keyStore , builder . getKeyStore ( ) )
assertEquals ( trustStore , builder . getTrustStore ( ) )
assertEquals ( "expectedValue" , configuration . getFunctionalKeyPassword ( ) )
assertNotNull ( transaction )
assertEquals ( "output-timeout" , client . portName )
assertEquals ( data , decompressed )
assertEquals ( 0 , demarcator . nextOffsetInfo ( ) . getOffset ( ) )
assertEquals ( i , ringBuffer . getNewestElement ( ) )
assertEquals ( "https" , determineProxiedScheme ( request ) )
assertEquals ( "http" , determineProxiedScheme ( request ) )
assertEquals ( "x-proxy-host" , determineProxiedHost ( request ) )
assertEquals ( "x-proxy-host:443" , request . getHeader ( WebUtils . PROXY_HOST_HTTP_HEADER ) )
assertEquals ( "x-forwarded-host:443" , request . getHeader ( WebUtils . FORWARDED_HOST_HTTP_HEADER ) )
assertEquals ( "1234" , determineProxiedPort ( request ) )
assertEquals ( firstObject , secondObject )
assertEquals ( 10 , recovered . size ( ) )
assertEquals ( 1 , document . getVersion ( ) )
assertThat ( stringData , is ( "12345" ) )
assertEquals ( RequestAction . READ , policy . getAction ( ) )
assertEquals ( ParseResultType . NOT_NUMBER , extensionManifest )
assertEquals ( iterations , processor . getCounter ( ) . getValue ( ) )
assertEquals ( 5 , runner . getThreadCount ( ) )
validator . assertFlowFile ( mockFlowFile )
assertEquals ( "TestName" , runner . getProcessorName ( ) )
assertRecordCount ( results , 5 )
assertThat ( size ( ) , is ( 5 ) )
assertQueueSize ( results , 5 )
assert results . size ( ) == 5
assertThat ( results . size ( ) , equalTo ( 5 ) )
assertThat ( results . size ( ) , is ( 5 ) )
assertThat ( results . size ( ) , equalTo ( 5 ) )
assert results . size ( ) == 0
assertEquals ( 0 , readCount )
assertEquals ( 0 , fetcher . fetchNext ( ) )
assertEquals ( 0 , fetcher . fetchNext ( ) )
assertEquals ( 0 , fetcher . fetchNext ( ) )
assertEquals ( 0 , fetcher . fetchNext ( ) )
assertEquals ( 0 , fetcher . fetchNext ( ) . size ( ) )
assertEquals ( 0 , fetcher . fetchNext ( ) . size ( ) )
assertEquals ( 0 , fetcher . fetchNext ( ) . size ( ) )
assertEquals ( 0 , fetcher . fetchNext ( ) )
assertEquals ( 0 , fetcher . fetchNext ( ) )
assertEquals ( 0 , fetcher . fetchNext ( ) )
assertEquals ( null , fetcher . fetchNext ( ) )
assertEquals ( 0 , fetcher . fetchNext ( ) )
assertEquals ( 0 , fetcher . fetchNext ( ) )
assertEquals ( expected , actual )
assertEquals ( expected , actual )
assertEquals ( expected , actual )
assertEquals ( expected , actual )
assertEquals ( expected , actual )
assertEquals ( null , deserialize ( null ) )
runner . assertTransferCount ( REL_NEW , 0 )
assertEquals ( "namespace1" , nifiFlow . getNamespace ( ) )
assertEquals ( 2 , size ( ) )
assertThat ( atlasProperties . getProperty ( ATLAS_URLS ) ) . isEqualTo ( atlasUrls )
assertNotNull ( atlasProperties )
assertEquals ( "expectedValue" , getParameterValue ( "rawValue" , ParameterValueEncoding . BASE64 ) )
assertEquals ( rawValue , getParameterValue ( rawValue , encoding ) )
runner . assertAllFlowFilesTransferred ( PutCloudWatchMetric . REL_FAILURE , 1 )
runner . assertAllFlowFilesTransferred ( PutDynamoDBRecord . REL_SUCCESS , 1 )
assertThat ( result . getItemsToPut ( ) . size ( ) , is ( 3 ) )
flowFile . assertAttributeEquals ( "key" , "expectedValue" )
assertEquals ( 1 , size ( ) )
assertEquals ( 1 , flowFiles . size ( ) )
assertEquals ( 1 , flowFiles . size ( ) )
assertEquals ( 1 , size ( ) )
assertEquals ( 1 , flowFiles . size ( ) )
assertEquals ( "invalid state" , exception . getMessage ( ) )
session . assertTransferCount ( ConsumeKinesisStream . REL_SUCCESS , 0 )
runner . assertAllFlowFilesTransferred ( PutS3Object . REL_SUCCESS , 3 )
runner . assertAllFlowFilesTransferred ( PutS3Object . REL_SUCCESS , 3 )
assertEquals ( storageClass . name ( ) , request . getStorageClass ( ) )
assertEquals ( true , result . isValid ( ) )
assertEquals ( true , result . isValid ( ) )
assertEquals ( true , result . isValid ( ) )
assertEquals ( false , result . isValid ( ) )
assertEquals ( false , result . isValid ( ) )
assertEquals ( 1 , runner . getFlowFilesForRelationship ( PutSNS . REL_SUCCESS ) . size ( ) )
runner . assertAllFlowFilesTransferred ( PutSQS . REL_SUCCESS , 1 )
assertEquals ( "https://myaccount.blob.core.usgovcloudapi.net" , endpoint )
AssertPlaceHolder = "assertEquals(\"https://myaccount.dfs.core.usgovcloudapi.net\", endpoint);"
assertNotNull ( processor . getCosmosClient ( ) )
assertEquals ( null , processor . getCosmosClient ( ) )
assertNotNull ( getProcessor ( ) )
assertNotNull ( flowFile . getAttribute ( "key" ) )
assertEquals ( 10 , size ( ) )
assertEquals ( 0 , size ( ) )
assertEquals ( clientOne , clientTwo )
assertEquals ( getEndpointSuffix ( ) , actual . getEndpointSuffix ( ) )
assertEquals ( "expectedEndpointSuffix" , actual . getEndpointSuffix ( ) )
assertEquals ( expectedJson , actualJson )
assertEquals ( primitiveType . toString ( ) , dataTypeName )
assertEquals ( "ONE" , testRunner . getProperty ( AbstractCassandraProcessor . CONSISTENCY_LEVEL ) )
assertEquals ( "Expected AssertionError to be thrown" , AssertionError . class , e . getClass ( ) )
outFile . assertAttributeEquals ( "key" , "value" )
assertEquals ( expectedFileNames , actualFileNames )
assertEquals ( expectedFileNames , actualFileNames )
assertEquals ( true , passed )
assertEquals ( false , condition . evaluate ( facts ) )
assertEquals ( true , passed )
assert rules . size ( ) > 0
assertEquals ( 1 , rules . size ( ) )
assertThat ( size ( ) , equalTo ( expectedSize ) )
QueueSize size = new QueueSize ( rules . size ( ) )
assertEquals ( 60 , size ( ) )
runner . assertQueueSize ( ExtractEmailAttachments . REL_ATTACHMENTS , 0 )
runner . assertTransferCount ( ExtractEmailAttachments . REL_ATTACHMENTS , 1 )
assertNotNull ( exception . getMessage ( ) )
assertEquals ( 0 , results . size ( ) )
assertEquals ( "basename-chunk1-record2.txt" , getName ( "basename" , 1 , 2 , ".txt" ) )
assertEquals ( "basename-chunk1-record2.txt" , getName ( "basename" , 1 , 2 , ".txt" ) )
assertEquals ( "basename" , getBasename ( flowFile , componentLog ) )
assertEquals ( 10 , binaryReader . getOffset ( ) )
assertEquals ( expectedValue , getCdata ( ) )
assertEquals ( val . length ( ) , binaryReader . getDWord ( ) )
assertEquals ( val . length ( ) , binaryReader . length ( ) )
assertEquals ( 4 , data . size ( ) )
assertEquals ( 1.23456 , value , 0.00001 )
assertEquals ( guid , "a1b2c3d4-e5f6-a7b8-c9da-ebf001121314" )
assertEquals ( "04D2" , hex )
assertEquals ( "fffffffffffffff2" , hex )
assertEquals ( 7 , testBinaryReaderBuilder . getDWord ( ) )
assertEquals ( - 25 , value )
assertEquals ( value , binaryReader . getValue ( ) )
assertEquals ( expected , actual )
assertEquals ( expected , actual )
assertEquals ( value . length ( ) , data . size ( ) )
assertNotNull ( clazz )
assertEquals ( 1 , 1 )
assertEquals ( 1 , queue . size ( ) )
assertEquals ( readSchema , result )
assertThat ( isDynamicCSVFormat ) . isTrue ( )
assertEquals ( true , isDynamicCSVFormat )
assertThat ( isDynamicCSVFormat ) . isTrue ( )
assertEquals ( "Attribute map is null" , e . getMessage ( ) )
assertEquals ( "Expected exception message" , "Expected message" , e . getMessage ( ) )
assertEquals ( true , event . isValid ( ) )
assertEquals ( false , result )
assertEquals ( true , result )
assertEquals ( 0 , size ( ) )
assertEquals ( StandardLineageResult . class , result . getClass ( ) )
assertNotNull ( result )
assertEquals ( 0 , users . size ( ) )
assertEquals ( null , managedAuthorizer . getFingerprint ( ) )
assertEquals ( Collections . emptyList ( ) , proxiedEntitiesChain )
assertEquals ( StandardLineageResult . class , result . getClass ( ) )
assertEquals ( StandardLineageResult . class , result . getClass ( ) )
assertEquals ( 0 , size ( ) )
assertEquals ( msg , unmarshalled )
objectType . assertEquals ( JdbcConnectionPool . class )
assertEquals ( length , builder . length )
assertEquals ( false , proxiedService . isProxied ( ) )
assertEquals ( "Testing 1 being shown in exception message" , observer . getLogs ( ) . get ( 0 ) . getMessage ( ) )
assertThat ( size ( ) , is ( 1024 * 1024L ) )
assertEquals ( expected , filtered )
assertEquals ( expectedFlow , actualFlow )
assertNull ( controller . getFlowManager ( ) . getControllerServices ( pg . getIdentifier ( ) ) )
assertEquals ( 2 , repositoryRecord . getAttributes ( ) . size ( ) )
assertNotNull ( ff1 )
assertNotNull ( outputStreamHolder . get ( ) )
assertEquals ( 0 , flowFileQueue . size ( ) )
assertEquals ( 7 , flowFiles . size ( ) )
assertEquals ( "hello, world" , new String ( buffer ) )
assertThat ( bogus . exists ( ) ) . isFalse ( )
assertEquals ( false , replaced )
assertNotNull ( heartbeat )
statusAnalyticsEngine . getStatusAnalytics ( "1" )
assertEquals ( RecordFieldType . SIMPLE_NAME_MAP . get ( "typeString" ) , of ( "typeString" ) )
assert ( target == 50 )
assertEquals ( expected , result )
assertEquals ( 6 , size . size ( ) )
assertEquals ( fp1 , fp2 )
assertEquals ( fp1 , fp2 )
assertEquals ( 0 , validationErrors . size ( ) )
assertEquals ( extensionMapping , unpackNars ( properties , NarClassLoaders . FRAMEWORK_NAR_ID , SystemBundle . create ( properties ) , NarUnpackMode . UNPACK_INDIVIDUAL_JARS ) )
assertEquals ( expected , actual )
assertEquals ( expected , actual )
assertNull ( actual )
assertEquals ( expected , actual )
assertNotNull ( illegalArgumentException . getMessage ( ) )
assertNotNull ( ioException )
assertNull ( authentication )
assertNull ( requestLog )
assertEquals ( 200 , response . getStatus ( ) )
assertEquals ( AgentStatus . class , response . getStatus ( ) . getClass ( ) )
assertEquals ( HttpStatus . SC_OK , response . getStatusLine ( ) . getStatusCode ( ) )
assertEquals ( 0 , matches . size ( ) )
assertThat ( matches . size ( ) , is ( 0 ) )
assertEquals ( 0 , matches . size ( ) )
assertEquals ( 0 , mappings . size ( ) )
assertEquals ( 3 , mappings . size ( ) )
assertEquals ( "jsmith@aaa.bbb" , mappedIdentity )
assertEquals ( "cn=jsmith,dc=aaa,dc=bbb" , mappedIdentity )
assertEquals ( 0 , size . size ( ) )
assertEquals ( "Expected NiFiUserDetails to be an instance of NiFiUser" , NiFiUser . class , userDetails . getNiFiUser ( ) . getClass ( ) )
assertEquals ( "Expected NiFiUserDetails to be an instance of NiFiUser" , NiFiUser . class , userDetails . getNiFiUser ( ) . getClass ( ) )
assertNotNull ( getPath ( ) )
assertEquals ( expiration , now ( ) )
assertEquals ( "Bearer " + BEARER_TOKEN , request . getHeader ( SecurityHeader . AUTHORIZATION . getHeader ( ) ) )
assertEquals ( null , bearerToken )
assertFalse ( result . hasErrors ( ) )
assertTrue ( result . hasErrors ( ) )
assertEquals ( null , saved )
assertEquals ( "not-hadoop-jwt" , authRequest . getCredentials ( ) )
assertEquals ( USERNAME , usernameCaptor . getValue ( ) )
assertEquals ( null , shouldNotExistRequest )
assertEquals ( request , get ( REQUEST_IDENTIFIER . getBytes ( ) , new ValueInboundAdapter < AbstractSaml2AuthenticationRequest > ( ) ) )
assertNull ( request )
assertNotNull ( object )
runner . assertValid ( )
runner . assertValid ( )
assertEquals ( 0 , runner . getQueueSize ( ) )
assertNull ( parseContentDisposition ( contentDisposition ) )
assertEquals ( 1 , result . size ( ) )
assertEquals ( "OperationQueue{currentOperation=null, remainingOperations=[]}" , queue . toString ( ) )
assertEquals ( true , result )
assertEquals ( false , result )
assertEquals ( false , result )
assertEquals ( false , result )
assertEquals ( true , result )
assertEquals ( 1 , privilegedExceptionActionArgumentCaptor . getAllValues ( ) . size ( ) )
assertEquals ( 0 , flowFiles . size ( ) )
assertEquals ( 1 , runner . getQueueSize ( ) )
runner . assertAllFlowFilesTransferred ( MoveHDFS . REL_SUCCESS )
assertNull ( value )
assertEquals ( value , getParameterValue ( rawValue , encoding ) )
assertEquals ( Collections . emptyMap ( ) , vaultCommunicationService . readKeyValueSecretMap ( PATH , "context" ) )
AssertPlaceHolder : assertEquals ( true , result )
assertTrue ( result )
assertEquals ( value , result )
assertEquals ( true , exception )
runner . assertTransferCount ( PutHBaseCell . REL_SUCCESS , 0 )
assertEquals ( json , "<expected value>" )
assertEquals ( json , "<expected value>" )
assertEquals ( null , deserialized )
assertNotNull ( pe . getCause ( ) )
runner . assertTransferCount ( PutHive3Streaming . REL_FAILURE , 1 )
runner . assertTransferCount ( PutHive3Streaming . REL_FAILURE , 1 )
assertThat ( orcType , equalTo ( createBoolean ( ) ) )
assertEquals ( 1 , runner . getFlowFilesForRelationship ( PutInfluxDB . REL_SUCCESS ) . size ( ) )
assertEquals ( result . getResults ( ) . size ( ) , 1 )
assertEquals ( 1 , flowFiles . size ( ) )
assertEquals ( 1 , flowFiles . size ( ) )
assertEquals ( 1 , flowFiles . size ( ) )
assertEquals ( 1 , flowFiles . size ( ) )
assertEquals ( SINGLE_TEST_BROKER_WITH_SCHEME , runner . getProperty ( cfProvider , JMSConnectionFactoryProperties . JMS_BROKER_URI ) )
assertEquals ( "Expected exception message" , "<expected message>" , e . getMessage ( ) )
runner . assertAllFlowFilesTransferred ( PublishKafkaRecord_2_6 . REL_FAILURE , 0 )
assertEquals ( 0 , runner . getFlowFilesForRelationship ( PublishKafkaRecord_2_6 . REL_FAILURE ) . size ( ) )
assertEquals ( 1 , runner . getQueueSize ( ) )
assertEquals ( 1 , size ( ) )
runner . assertQueueSize ( ResizeImage . REL_FAILURE , 1 )
runner . assertAllFlowFilesTransferred ( ResizeImage . REL_FAILURE , 1 )
assertEquals ( 0 , size ( ) )
assertEquals ( 0 , reporterMock . reportCount ( ) )
runner . assertTransferCount ( GetMongo . REL_SUCCESS , 3 )
assertEquals ( 10 , count )
assertNotNull ( e )
assertEquals ( "expected formatted date" , expectedFormattedDate , formatted )
assertEquals ( null , rootGroupStatus . getName ( ) )
assertEquals ( 1 , closeCount . get ( ) )
assertEquals ( 0 , closeCount . get ( ) )
assert newSize > storeSize
assertEquals ( "Expected UnsupportedOperationException to be thrown" , UnsupportedOperationException . class , assertThrows ( AuthorizationAccessException . class , ( ) -> managedRangerAuthorizer . getFingerprint ( ) ) )
assertEquals ( TENANT_FINGERPRINT , userGroupProvider . getFingerprint ( ) )
assertEquals ( "" , serialize ( null ) )
assertEquals ( 0 , results . size ( ) )
flowFiles . get ( 0 ) . assertAttributeEquals ( AbstractRethinkDBProcessor . RETHINKDB_ERROR_MESSAGE , "Deleted count should be 1 but was 0 for document with id 'id1'" )
flowFiles . get ( 0 ) . assertAttributeEquals ( AbstractRethinkDBProcessor . RETHINKDB_ERROR_MESSAGE , AbstractRethinkDBProcessor . DOCUMENT_ID_EMPTY_MESSAGE )
flowFiles . get ( 0 ) . assertAttributeEquals ( AbstractRethinkDBProcessor . RETHINKDB_ERROR_MESSAGE , AbstractRethinkDBProcessor . DOCUMENT_ID_EMPTY_MESSAGE )
runner . getAttribute ( key )
assertEquals ( 1 , flowFiles . size ( ) )
flowFiles . get ( 0 ) . assertAttributeEquals ( AbstractRethinkDBProcessor . RETHINKDB_ERROR_MESSAGE , "Document with id '" + DOCUMENT_ID + "' not found" )
flowFiles . get ( 0 ) . assertAttributeEquals ( AbstractRethinkDBProcessor . RETHINKDB_ERROR_MESSAGE , GetRethinkDB . DOCUMENT_ID_EMPTY_MESSAGE )
flowFiles . get ( 0 ) . assertAttributeEquals ( AbstractRethinkDBProcessor . RETHINKDB_ERROR_MESSAGE , GetRethinkDB . DOCUMENT_ID_EMPTY_MESSAGE )
runner . getAttribute ( "rethinkdb.id" )
assertEquals ( 1 , flowFiles . size ( ) )
assertQueueNotEmpty ( )
assertEquals ( actions . size ( ) , 2 )
assertEquals ( 3 , size ( ) )
assertEquals ( 1000 , size ( ) )
assertEquals ( 0 , size ( ) )
assertEquals ( 3 , size ( ) )
assertEquals ( 3 , size ( ) )
assertEquals ( 0 , size ( ) )
assertNotNull ( getString ( 0 ) )
assertEquals ( expected , requestBody )
testRunner . assertTransferCount ( REL_SUCCESS , 1 )
assertEquals ( 0 , testRunner . getFlowFilesForRelationship ( REL_SUCCESS ) . size ( ) )
assertEquals ( 0 , size ( ) )
assertEquals ( 0 , testRunner . getFlowFilesForRelationship ( "success" ) . size ( ) )
assertEquals ( 0 , testRunner . getFlowFilesForRelationship ( REL_SUCCESS ) . size ( ) )
assertEquals ( shareAccessSet , testRunner . getProperty ( PutSmbFile . SHARE_ACCESS_READ ) )
assertEquals ( target . getAddress ( ) . toString ( ) , actualTargetAddress )
runner . assertAllFlowFilesContainAttribute ( CoreAttributes . MIME_TYPE . key ( ) )
assertEquals ( expectedXml , runner . getOutputData ( QuerySolr . RESULTS ) . get ( 0 ) . toString ( ) )
assertThat ( rows . size ( ) , equalTo ( 0 ) )
assertEquals ( componentDetails , new ComponentDetails . Builder ( ) . build ( ) )
assertEquals ( expectedStatus , focalMethod . getStatus ( ) )
assertEquals ( Response . Status . BAD_REQUEST . getStatusCode ( ) , response . getStatus ( ) )
responseFlowFile . assertContentEquals ( "expectedContent" )
runner . assertAllFlowFilesTransferred ( CompressContent . REL_SUCCESS , 1 )
runner . assertAllFlowFilesTransferred ( CompressContent . REL_SUCCESS , 1 )
runner . assertAllFlowFilesTransferred ( CompressContent . REL_SUCCESS , 1 )
runner . assertQueueEmpty ( )
runner . assertQueueNotEmpty ( )
assertNotNull ( contains ( value ) )
assertNotNull ( runner . contains ( value ) )
assertNotNull ( runner . contains ( value ) )
assertNotNull ( runner . getFlowFilesForRelationship ( "failure" ) . get ( 0 ) )
assertNotNull ( contains ( value ) )
assertNotNull ( containsResult )
assertNotNull ( contains ( value ) )
out . assertAttributeEquals ( "xpath.result2" , "Hello" )
testRunner . assertContentEquals ( out , expectedXml )
assertEquals ( ProvenanceEventType . SOME_EVENT_TYPE , getEventType ( ) )
runner . getFlowFilesForRelationship ( FetchFileTransfer . REL_SUCCESS ) . get ( 0 ) . assertContentEquals ( "world" )
runner . assertContentEquals ( "world" )
runner . assertAllFlowFilesTransferred ( FetchFileTransfer . REL_SUCCESS , 1 )
runner . assertAllFlowFilesTransferred ( FetchFileTransfer . REL_SUCCESS , 1 )
assertEquals ( 5 , parsed . size ( ) )
assertEquals ( 5 , parsed . size ( ) )
assertEquals ( 2 , parsed . size ( ) )
assertEquals ( currentProtocol , sslSession . getProtocol ( ) )
assertEquals ( 3 , runner . getQueueSize ( ) )
assertEquals ( 33 , runner . getQueueSize ( ) . getObjectCount ( ) )
runner . assertAllFlowFilesTransferred ( ModifyBytes . REL_SUCCESS , 1 )
runner . assertAllFlowFilesTransferred ( ModifyBytes . REL_SUCCESS , 1 )
out . assertAttributeEquals ( "filename" , "expectedFileName" )
runner . assertAllFlowFilesTransferred ( MonitorActivity . REL_SUCCESS )
runner . assertAllFlowFilesTransferred ( ParseSyslog5424 . REL_SUCCESS , 1 )
runner . assertAllFlowFilesTransferred ( ParseSyslog5424 . REL_SUCCESS , 1 )
runner . assertAllFlowFilesTransferred ( ParseSyslog5424 . REL_SUCCESS , 1 )
runner . assertQueueSize ( 0 )
runner . assertAllFlowFilesTransferred ( FetchFile . REL_SUCCESS , 1 )
runner . assertAllFlowFilesTransferred ( FetchFile . REL_SUCCESS , 1 )
runner . assertTransferCount ( PutSQL . REL_RETRY , 4 )
runner . assertContentEquals ( out , expected )
mff . assertAttributeEquals ( "exceeded.time" , "${now():toString()}" )
assertEquals ( false , validationResult . isValid ( ) )
assertEquals ( "expectedValue" , getSimpleName ( "extensionName" ) )
assertEquals ( "expectedValue" , getSimpleName ( "extensionName" ) )
assertEquals ( 0 , subDirectories . size ( ) )
assertEquals ( expectedDirectory , file . getAbsolutePath ( ) )
assertEquals ( expectedDirectory , file . getAbsolutePath ( ) )
assertEquals ( expectedPath , result )
assertEquals ( expectedPath , result )
assertEquals ( expectedPath , result )
assertEquals ( expectedPath , result )
assertEquals ( expectedPath , result )
assertEquals ( expectedPath , result )
assertEquals ( expectedPath , result )
assertEquals ( expectedPath , result )
assertEquals ( expectedPath , result )
assertEquals ( expectedPath , result )
assertEquals ( 3 , frames . size ( ) )
assertEquals ( expected , new String ( result , StandardCharsets . UTF_8 ) )
assertEquals ( expected , new String ( result , StandardCharsets . UTF_8 ) )
assertEquals ( attributes , result )
assertEquals ( null , result )
assertEquals ( null , result )
assertThat ( skipped ) . isEqualTo ( SALT_LENGTH )
assertEquals ( 1 , callCounter . get ( ) )
assertEquals ( "Expected exception message" , "<expected message>" , e . getMessage ( ) )
assertThrows ( ProcessException . class , service :: getConnection )
assertNotNull ( e . getMessage ( ) )
assertEquals ( true , val . isValid ( ) )
assertEquals ( accessTokenValue , actual )
assertEquals ( expected , requestCaptor . getValue ( ) . header ( "Authorization" ) )
assertEquals ( true , result . isValid ( ) )
assertEquals ( true , result . isValid ( ) )
assertEquals ( true , result . isValid ( ) )
assertNotNull ( inference . toDataType ( ) )
assertEquals ( firstId , secondId )
assertEquals ( expectedMessage , actualMessage . toString ( ) )
assertEquals ( xmlResult , out . toString ( ) )
assertEquals ( xmlResult , out . toString ( ) )
assertEquals ( xmlResult , out . toString ( ) )
assertEquals ( xmlResult , out . toString ( ) )
assertEquals ( xmlResult , out . toString ( ) )
assertEquals ( trim ( xmlResult ) , trim ( out . toString ( ) ) )
runner . assertValid ( service )
assertEquals ( new URI ( "https://localhost:8080/pathSegment?parameterName=parameterValue" ) , uri )
assertEquals ( "Expected assertion message" , expectedValue , actualValue )
assertNotNull ( e )
assertEquals ( 0 , results . size ( ) )
assertEquals ( CUSTOM_AUTH , testSubject . getAuthHeaderValue ( ) )
assertEquals ( eventXmls . size ( ) , flowFilesForRelationship . size ( ) )
assertEquals ( WinError . ERROR_INSUFFICIENT_BUFFER , kernel32 . GetLastError ( ) )
assertEquals ( Integer . MAX_VALUE , kernel32 . GetLastError ( ) )
assertEquals ( 0 , flowFiles . size ( ) )
assertEquals ( 0 , flowFiles . size ( ) )
assertEquals ( null , existingKey )
assertEquals ( null , entity )
assertEquals ( null , entity )
assertNull ( event . getField ( ) )
assertNotNull ( e . getMessage ( ) )
assertNull ( retrievedPolicy )
assertEquals ( null , retrievedPolicy )
assertEquals ( user1 , updatedUser1 )
assertEquals ( group1 , updatedGroup1 )
assertEquals ( 1 , size ( ) )
assertEquals ( "Expected exception message" , "<expected message>" , e . getMessage ( ) )
assertEquals ( null , entity )
assertEquals ( null , keyStoreProvider )
assertEquals ( Response . Status . NOT_FOUND . getStatusCode ( ) , response . getStatus ( ) )
assertEquals ( expectedJwt , service . getJwt ( TEST_REQUEST_IDENTIFIER ) )
assertEquals ( null , service . getJwt ( TEST_REQUEST_IDENTIFIER ) )
assertEquals ( "expectedFingerprint" , configurationContext . getFingerprint ( ) )
assertEquals ( "" , userGroupProvider . getFingerprint ( ) )
assertEquals ( TENANT_FINGERPRINT , userGroupProvider . getFingerprint ( ) )
assert taskScheduleDuration . toMillis ( ) >= 1000
assertEquals ( 2 , getNifiClient ( ) . getClusterSummary ( ) . getCluster ( ) . getNodes ( ) . size ( ) )
assertEquals ( clusterSummary , getNifiClient ( ) . getFlowClient ( ) . getClusterSummary ( ) )
assertEquals ( false , component . getSupportsSensitiveDynamicProperties ( ) )
assertEquals ( false , component . getSupportsSensitiveDynamicProperties ( ) )
assertThat ( candidates . size ( ) , is ( equalTo ( 0 ) ) )
assertEquals ( expected , resultOut )
assertEquals ( expected , result )
assertEquals ( expected , result )
assertEquals ( 0 , zeroCount )
assertEquals ( 4096 , zeroCount )
assertEquals ( 1024 , zeroCount )
assertEquals ( 0 , zeroCount )
assertEquals ( 0 , zeroCount )
assertEquals ( "The description of the attribute" , getDescription ( ) )
assertEquals ( 2 , tlsToolkitMain . getMainMap ( ) . size ( ) )
assertEquals ( expectedSize , queue . size ( ) )
assertNotNull ( e )
assertEquals ( testCaHostname , tlsCertificateAuthorityClientCommandLine . getCaHostname ( ) )
assertEquals ( testPort , tlsCertificateAuthorityClientCommandLine . getPort ( ) )
assertEquals ( testCertificateFile , tlsCertificateAuthorityClientCommandLine . getCertificateDirectory ( ) )
assertEquals ( "Expected IOException to be thrown" , "Expected message" , e . getMessage ( ) )
assertEquals ( testCaHostname , tlsCertificateAuthorityServiceCommandLine . getCaHostname ( ) )
assertNotNull ( e )
assertEquals ( "Unknown argument: --unknownArg" , e . getMessage ( ) )
assertEquals ( testSigningAlgorithm , tlsToolkitStandaloneCommandLine . getSigningAlgorithm ( ) )
assertNotNull ( e )
"<AssertPlaceHolder>"
assertNotNull ( e )
assertEquals ( testPrefix , config . getDnPrefix ( ) )
assertEquals ( testSuffix , tlsToolkitStandaloneCommandLine . getDnSuffix ( ) )
assertEquals ( root , root . getRoot ( ) )
assertEquals ( HttpURLConnection . class , get ( endpointPath ) . getClass ( ) )
assertEquals ( nifiProperties . getProperty ( descriptor ) , null )
assertEquals ( nifiProperties . getProperty ( descriptor ) , null )
assertEquals ( ExitCode . HELP , e . getExitCode ( ) )
assertEquals ( length , generated . length ( ) )
assertEquals ( "my_silly_filename.pem" , result )
assertEquals ( "my_silly_filename.pem" , result )
assertEquals ( "my_illyfilename.pem" , result )
assertEquals ( "my_sillyfilename.pem" , result )
assertEquals ( "my-silly-filename.pem" , result )
assertEquals ( "my_silly_filename.pem" , result )
assertEquals ( "OU=NiFi/Organisation,CN=testuser" , clientDn )
assertEquals ( key . getPrivateKey ( ) . getEncoded ( ) , getEncoded ( plaintextSensitiveValue ) )
